shiny::runApp('GitHub/Fall2018-Project2-sec2_proj2_grp1/app')
library(shiny)
library(leaflet)
shinyUI(fluidPage(
titlePanel("Hotel Map"),
sidebarLayout(
sidebarPanel(
selectInput("year",
label = "Choose Year:",
choices = c(2000,2005,2010),
selected = 2000
)),
mainPanel (leafletOutput("map","100%",300))
)
))
library(leaflet)
hotels <- read.table(text = "Hotel Year  latitude        longitude
A   2000  41.886337      -87.628472
B   2005  41.88819       -87.635199
C   2010  41.891113      -87.63301",
header = TRUE)
shinyServer(function(input, output) {
output$map <- renderLeaflet({
df <- hotels[hotels$Year == input$year,]
leaflet()  %>%
addTiles() %>%
addMarkers(data = df)
})
})
runApp()
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Hotel Map"),
sidebarLayout(
sidebarPanel(
selectInput("year",
label = "Choose Year:",
choices = c(2000,2005,2010),
selected = 2000
)),
mainPanel (leafletOutput("map","100%",300))
)
)
library(leaflet)
hotels <- read.table(text = "Hotel Year  latitude        longitude
A   2000  41.886337      -87.628472
B   2005  41.88819       -87.635199
C   2010  41.891113      -87.63301",
header = TRUE)
server <-function(input, output) {
output$map <- renderLeaflet({
df <- hotels[hotels$Year == input$year,]
leaflet()  %>%
addTiles() %>%
addMarkers(data = df)
})
}
shinyApp(ui, server)
library(tmap)
data("World")
tm_shape(World) +
tm_polygons("HPI")
install.packages('tmap')
library(tmap)
data("World")
tm_shape(World) +
tm_polygons("HPI")
fix(world)
(tmap)
(tmap)
(tmap)
library(tmap)
data("World")
tm_shape(World) +
tm_polygons("HPI")
pm <- read.csv('../data/pm25.csv', header = T)
setwd("~/GitHub/Fall2018-Project2-sec2_proj2_grp1")
pm <- read.csv('../data/pm25.csv', header = T)
pm <- read.csv('../data/pm25.csv', header = T)
getwd()
pm <- read.csv('../data/pm25.csv', header = T)
so2 <- read.csv('../data/so2.csv', header = T)
setwd("~/GitHub/Fall2018-Project2-sec2_proj2_grp1")
so2 <- read.csv('../data/so2.csv', header = T)
getwd()
runApp('app')
so2 <- read.csv('../data/so2.csv', header = T)
