fix(Hitters)
library(Hitters)
shiny::runApp('GitHub/Fall2018-Project2-sec2_proj2_grp1/app')
runApp('GitHub/Fall2018-Project2-sec2_proj2_grp1/app')
runApp('GitHub/Fall2018-Project2-sec2_proj2_grp1/app')
runApp('GitHub/Fall2018-Project2-sec2_proj2_grp1/app')
runApp('GitHub/Fall2018-Project2-sec2_proj2_grp1/app')
runApp('GitHub/Fall2018-Project2-sec2_proj2_grp1/app')
runApp('GitHub/Fall2018-Project2-sec2_proj2_grp1/app')
getwd()
setwd("~/GitHub/Fall2018-Project2-sec2_proj2_grp1/data")
getwd()
temp <- read.csv('temp.csv')
temp
plot(temp$Mean)
temp$Date <- as.Date(temp$Date, "%m/%d/%Y")
plot(temp$Mean~temp$Date)
plot(temp$Mean~temp$Date, xaxt='n',type='l')
axis(1, temp$Date, fromat(temp$Date, "%b %d"), cex.axis=0.7)
axis(1, temp$Date, format(temp$Date, "%b %d"), cex.axis=0.7)
axis(1, temp$Date, format(temp$Date, "%b %Y"), cex.axis=0.7)
temp <- read.table('temp.csv', header = T)
temp$Date <- as.Date(temp$Date, "%m/%d/%Y")
plot(temp$Mean~temp$Date, xaxt='n',type='l')
axis(1, temp$Date, format(temp$Date, "%b %Y"), cex.axis=0.7)
temp <- read.table('temp.csv', header = T)
temp$Date <- as.Date(temp$Date, "%m/%d/%Y")
plot(temp$Mean~temp$Date, xaxt='n',type='l')
temp <- read.table('temp.csv', header = T)
temp$Date <- as.Date(temp$Date, "%m/%d/%Y")
plot(temp$Mean~temp$Date, xaxt='n',type='l')
fix(temp)
temp <- read.table('temp.csv', header = T)
temp$Date <- as.Date(temp$Date, "%m/%d/%Y")
plot(temp$Mean~temp$Date, xaxt='n',type='l')
axis(1, temp$Date, format(temp$Date, "%b %Y"), cex.axis=0.7)
fix(temp)
rm(list = ls())
temp <- read.table('temp.csv', header = T)
temp$Date <- as.Date(temp$Date, "%m/%d/%Y")
temp <- read.csv('temp.csv', header = T)
temp$Date <- as.Date(temp$Date, "%m/%d/%Y")
plot(temp$Mean~temp$Date, xaxt='n',type='l')
axis(1, temp$Date, format(temp$Date, "%b %Y"), cex.axis=0.7)
library(plotly)
plot_ly(temp$Date, temp$Mean, mode='line')
temp <- read.csv('temp.csv', header = T)
temp$Date <- as.Date(temp$Date, "%m/%d/%Y")
plot_ly(temp$Date, temp$Mean, mode='line')
plot_ly(~temp$Date, ~temp$Mean, mode='line')
ggplot(data=temp,
mapping = aes(x=temp$Date, y=temp$Mean))
ggplot(data=temp,
mapping = aes(x=temp$Date, y=temp$Mean))+
geom_point()
ggplot(data=temp,
mapping = aes(x=temp$Date, y=temp$Mean))+
geom_point+
geom_line()
ggplot(data=temp,
mapping = aes(x=temp$Date, y=temp$Mean))+
geom_point()+
geom_line()
ggplot(data=temp,
mapping = aes(x=temp$Date, y=temp$Mean, col='blue'))+
geom_point()+
geom_line()
ggplot(data=temp,
mapping = aes(x=temp$Date, y=temp$Mean))+
geom_point()+
geom_line()
ggplot(data=temp,
mapping = aes(x=temp$Date, y=temp$Mean))+
geom_point()+
geom_line(col='blue')
library(plotly)
library(reshape2)
qplot(temp$Date, temp$Mean, data = temp, geom='line', group=varible)+
facet_grid(variable ~ ., scale = "free_y") +
theme_bw()
qplot(temp$Date, temp$Mean, data = temp, geom='line')+
facet_grid( scale = "free_y") +
theme_bw()
qplot(temp$Date, temp$Mean, data = temp, geom='line')+
facet_grid( scale = "free_y") +
theme_bw()
runApp('~/GitHub/Fall2018-Project2-sec2_proj2_grp1/app')
library(plotly)
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
fix(df)
library(ggplot2)
ggplot(data=temp, aes(x=Date, y=Mean))+
geom_bar(stat = 'identity', fill="steelblue")+
geom_text(aes(label=Mean), vjust=1.6, size=3.5)+
theme_minimal()
ggplot(data=temp, aes(x=Date, y=Mean))+
geom_bar(stat = 'identity', fill="steelblue")+
theme_minimal()
ggplot(temp, aes(x=Date, y=Mean))+
geom_area()
ggplot(temp, aes(x=Date, y=Mean))+
geom_line()
ggplot(temp, aes(x=Date, y=Mean))+
geom_step()
ggplot(data=temp, aes(x=Date, y=Mean))+
geom_bar(stat = 'identity', fill="steelblue")+
theme_minimal()
ggplot(temp, aes(x=Date, y=Mean))+
geom_line()
ggplot(temp, aes(x=Date, y=Mean))+
geom_line(col='blue')
ggplot(temp, aes(x=Date, y=Mean))+
geom_line(col='steelblue')
ggplot(temp, aes(x=Date, y=Mean))+
geom_point(pch=17, col='blue',size=2)
ggplot(temp, aes(x=Date, y=Mean))+
geom_point(pch=1, col='blue',size=2)
ggplot(temp, aes(x=Date, y=Mean))+
geom_point(pch=1, col='blue',size=2)+
geom_smooth(method = 'lm',col='red', linetype=2)
ggplot(temp, aes(x=Date, y=Mean))+
geom_line(col='steelblue')+
geom_smooth(method = 'lm',col='red', linetype=2)
ggplot(data=temp, aes(x=Date, y=Mean))+
geom_bar(stat = 'identity', fill="steelblue")+
geom_smooth(method = 'lm',col='red', linetype=2)
ggplot(temp, aes(x=Date, y=Mean))+
geom_line(col='steelblue')+
geom_smooth(method = 'lm',col='red', linetype=2)+
labs()
ggplot(temp, aes(x=Date, y=Mean))+
geom_line(col='steelblue')+
geom_smooth(method = 'lm',col='red', linetype=2)+
library(plotly)
ggplot(temp, aes(x=Date, y=Mean))+
geom_line(col='steelblue')+
geom_smooth(method = 'lm',col='red', linetype=2)
ggplot(data=temp, aes(x=Date, y=Mean))+
geom_bar(stat = 'identity', fill="steelblue")+
geom_smooth(method = 'lm',col='red', linetype=2)
ggplot(temp, aes(x=Date, y=Mean))+
geom_line(col='steelblue')+
geom_smooth(method = 'lm',col='red', linetype=2)
library(dplyr)
library(tidyr)
library(ggplot2)
library(animation)
install.packages('animation')
install.packages('viridis')
install.packages('ggthemes')
library(animation)
library(viridis)
library(scales)
library(ggthemes)
#Data explanation at https://crudata.uea.ac.uk/cru/data/temperature/
#r code to read data https://crudata.uea.ac.uk/cru/data/temperature/read_cru_hemi.r
# data https://crudata.uea.ac.uk/cru/data/temperature/HadCRUT4-gl.dat
#As well as data read in script
source("read_cru_hemi.r")
temp_dat <- read_cru_hemi("./HadCRUT4-gl.dat")
#remove cover
temp_dat_monthly <- temp_dat %>%
select(-starts_with("cover")) %>%
select(-starts_with("annual")) %>%
gather(month, anomaly, -year) %>%
mutate(month = gsub("month\\.", "", month)) %>%
mutate(month = as.numeric(month)) %>%
filter(year !=2016)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggthemes)
#Data explanation at https://crudata.uea.ac.uk/cru/data/temperature/
#r code to read data https://crudata.uea.ac.uk/cru/data/temperature/read_cru_hemi.r
# data https://crudata.uea.ac.uk/cru/data/temperature/HadCRUT4-gl.dat
#As well as data read in script
source("https://crudata.uea.ac.uk/cru/data/temperature/read_cru_hemi.r")
temp_dat <- read_cru_hemi("https://crudata.uea.ac.uk/cru/data/temperature/HadCRUT4-gl.dat")
#remove cover
temp_dat_monthly <- temp_dat %>%
select(-starts_with("cover")) %>%
select(-starts_with("annual")) %>%
gather(month, anomaly, -year) %>%
mutate(month = gsub("month\\.", "", month)) %>%
mutate(month = as.numeric(month))
dgr_fmt <- function(x, ...) {
parse(text = paste(x, "", sep = ""))
}
months <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
minYr  <- min(temp_dat_monthly$year)
maxYr  <- max(temp_dat_monthly$year)
maxMon <- max(temp_dat_monthly[temp_dat_monthly$year == maxYr &
!is.na(temp_dat_monthly$anomaly), "month"] )
brk <- seq(minYr, maxYr, by=10)
gg <- ggplot(temp_dat_monthly, aes(x=month, y=year, fill=anomaly))
gg <- gg + geom_raster()
gg <- gg + scale_fill_gradient2(name="Difference from \nAverage in Â°C", na.value="white",
mid="black", midpoint=0, low="blue", high="red")
plot.title = paste('Average World Temperature from', minYr,
'to', months[ maxMon ], maxYr)
plot.subtitle = 'Data is HadCRUT4-gl from crudata'
gg <- gg + ggtitle(bquote(atop(.(plot.title), atop(italic(.(plot.subtitle)), ""))))
gg <- gg + labs(x=NULL, y=NULL)
gg <- gg + theme_tufte(base_family="Helvetica")
gg <- gg +
coord_cartesian(ylim = c(1850,2015)) +
scale_y_continuous(breaks = brk, labels = brk) +
scale_x_continuous(expand = c(0, 0),
breaks = c(1,2,3,4,5,6,7,8,9,10,11,12),
labels = months)
gg <- gg + theme(plot.title=element_text(hjust=0))
gg <- gg + theme(axis.ticks=element_blank())
gg <- gg + theme(axis.text=element_text(size=7))
ggsave("heat.png", width=5, height=3, dpi=150)
print(gg)
library(rworldmap)
sPDF <- joinCountryData2Map(dF,
, joinCode = "NAME"
, nameJoinColumn = "X"
, nameCountryColumn = "X"
, verbose = TRUE)
mapCountryData(sPDF,nameColumnToPlot='X2005')
library(rworldmap)
install.packages('rworldmap')
library(rworldmap)
sPDF <- joinCountryData2Map(dF,
, joinCode = "NAME"
, nameJoinColumn = "X"
, nameCountryColumn = "X"
, verbose = TRUE)
mapCountryData(sPDF,nameColumnToPlot='X2005')
library(plotly)
# use scipy to read from netcdf file since R's ncdf4
# doesn't seem to know how to read it...
dat <- reticulate::py_run_file("air-temp-read.py")
library(readr)    # read_table() / write_csv()
library(dplyr)
library(zoo)      # as.yearmon()
library(ggplot2)  # devtools::install_github("hadley/ggplot2")
library(hrbrmisc) # devtools::install_github("hrbrmstr/hrbrmisc")
install.packages('hrbrmisc')
library(hrbrmisc) devtools::install_github("hrbrmstr/hrbrmisc")
devtools::install_github("hrbrmstr/hrbrmisc")
library(hrbrmisc)
library(viridis)
URL <- "http://www.metoffice.gov.uk/hadobs/hadcrut4/data/current/time_series/HadCRUT.4.4.0.0.monthly_ns_avg.txt"
fil <- sprintf("data/%s", basename(URL))
if (!file.exists(fil)) download.file(URL, fil)
global_temps <- read_table(fil, col_names=FALSE)
ggplot(temp, aes(x=Date, y=Mean))+
geom_line(col='steelblue')+
geom_smooth(method = 'lm',col='red', linetype=2)+
labs(title='Global Temperature Change', x='Year',y="Global ")
p <- ggplot(temp, aes(x=Date, y=Mean))+
geom_line(col='steelblue')+
geom_smooth(method = 'lm',col='red', linetype=2)+
labs(title='Global Temperature Change', x='Year',y="Global ")
p<- ggplotly(p)
p <- ggplot(temp, aes(x=Date, y=Mean))+
geom_line(col='steelblue')+
geom_smooth(method = 'lm',col='red', linetype=2)+
labs(title='Global Temperature Change', x='Year',y="Global ")
p<- ggplotly(p)
p <- ggplot(temp, aes(x=Date, y=Mean))+
geom_line(col='steelblue')+
geom_smooth(method = 'lm',col='red', linetype=2)+
labs(title='Global Temperature Change', x='Year',y="Global ")
p<- ggplotly(p)
p
p
